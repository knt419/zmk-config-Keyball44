#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        BSDEL: BSDEL {
            compatible = "zmk,behavior-mod-morph";
            label = "BSDEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        left_parenthesis: left_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACE>;
        };

        right_parenthesis: right_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp RIGHT_BRACE>;
        };

        left_kakko: left_kakko {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_KAKKO";
            bindings = <&left_parenthesis>, <&kp LEFT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        right_kakko: right_kakko {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_KAKKO";
            bindings = <&right_parenthesis>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        left_home: left_home {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_HOME";
            bindings = <&kp LEFT_ARROW>, <&kp HOME>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        right_end: right_end {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_END";
            bindings = <&kp RIGHT_ARROW>, <&kp END>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        up_pageup: up_pageup {
            compatible = "zmk,behavior-mod-morph";
            label = "UP_PAGEUP";
            bindings = <&kp UP_ARROW>, <&kp PAGE_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        down_pagedown: down_pagedown {
            compatible = "zmk,behavior-mod-morph";
            label = "DOWN_PAGEDOWN";
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader_r {
            bindings = <&bootloader>;
            key-positions = <23 11>;
        };

        studio {
            bindings = <&studio_unlock>;
            key-positions = <25 26>;
        };
    };

    macros {
        dbl_shft: dbl_shft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp LEFT_SHIFT>;
            label = "DBL_SHFT";
        };

        dbl_ctrl: dbl_ctrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LCTRL>;
            label = "DBL_CTRL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&lt 6 ESCAPE    &kp Q               &kp W       &kp MINUS             &kp R                    &kp Z              &kp X        &kp D  &kp E  &kp COMMA  &kp P            &kp SQT
&mt LCTRL TAB   &kp I               &kp T       &kp A                 &kp K                    &kp G              &kp H        &kp N  &kp O  &kp U      &kp S            &kp SEMICOLON
&kp LEFT_SHIFT  &kp F               &kp PERIOD  &kp C                 &kp M                    &kp B              &kp J        &kp Y  &kp V  &kp L      &kp SLASH        &kp BACKSLASH
&mkp RCLK       &mt LEFT_ALT LANG2  &mkp LCLK   &mt LEFT_SHIFT SPACE  &mt LEFT_GUI LANGUAGE_1             &BSDEL  &lt 4 ENTER                           &kp PRINTSCREEN
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &mo 2   &mo 3               &trans  &trans                          &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                          &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                          &trans
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&trans     &kp F1        &kp F2        &kp F3                &kp F4        &kp F5                &kp F6        &kp F7          &kp F8      &kp F9      &kp F10       &trans
&trans     &left_kakko   &dbl_ctrl     &dbl_shft             &kp EQUAL     &kp PLUS              &left_home    &down_pagedown  &up_pageup  &right_end  &right_kakko  &trans
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3          &kp NUMBER_4  &kp N5                &kp NUMBER_6  &kp N7          &kp N8      &kp N9      &kp N0        &trans
&kp ASTRK  &kp SLASH     &mkp RCLK     &mt LEFT_SHIFT SPACE  &kp PERIOD                  &trans  &trans                                                &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&none   &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT              &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none   &bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans                   &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SQT                &none
&none   &trans           &trans        &trans        &trans        &trans                   &kp UNDERSCORE  &kp PLUS       &trans            &trans                &kp NON_US_BACKSLASH   &none
&trans  &trans           &trans        &trans        &trans                         &trans  &trans                                                                 &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&bootloader  &bt BT_CLR    &none         &none         &none         &none                     &bt BT_CLR    &none         &none         &none         &none         &none
&none        &none         &none         &none         &none         &none                     &none         &none         &none         &none         &none         &none
&trans       &trans        &trans        &trans        &trans                          &trans  &mo 6                                                   &trans
            >;
        };
    };
};
